<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="basic_robot">

<param name="robot_description"
  command="xacro '$(find new_robot_urdf)/urdf/myrobot.urdf.xacro'" />

<!--colors-->
<material name ="blue">
    <color rgba=" 0 0 0.8 1"/>
</material>

<!--All Xacro Macros-->

<!--xacro macro for base-->
<xacro:property name="length" value="1.0" />
<xacro:property name="width" value="1.0" />
<xacro:property name="height" value="0.1" />
<xacro:property name="base_origin" value="0 0 0.1" />

<!--xacro macro for inertia base-->
<xacro:macro name="base_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
</xacro:macro>

<!--Wheel Macros-->
<xacro:property name="wheel_origin_rpy" value="1.57075 0 0" />
<xacro:property name="wheel_len" value="0.1" />
<xacro:property name="wheel_radius" value="0.1" />

<!--xacro macro for inertia wheels-->
<xacro:macro name="wheel_inertia" params="mass">
    <inertial>
      <mass value="${mass}" />
    <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
</xacro:macro>

<!--xacro macro for right_front_wheel_joint-->
<xacro:property name="wheel_axis" value="0 1 0" />
<xacro:property name="right_front_wheel_joint_xyz" value="0.40 0.5 0.1" />

<!--xacro macro for left_front_wheel_joint-->
<xacro:property name="left_front_wheel_joint_xyz" value="0.4 -0.5 0.1" />

<!--xacro macro for right_back_wheel_joint-->
<xacro:property name="right_back_wheel_joint_xyz" value="-0.4 0.5 0.1" />

<!--xacro macro for left_back_wheel_joint-->
<xacro:property name="left_back_wheel_joint_xyz" value="-0.4 -0.5 0.1" />

<!-- Dummy link to get rid of  base_link has an inertia specified in the URDF error -->
<link name="dummy"/>

<!-- Dummy joint to get rid of  base_link has an inertia specified in the URDF error -->
<joint name="dummy_joint" type="fixed">
  <parent link="dummy" />
  <child link="base_link" />
</joint>

<link name="base_link">
    <visual>
    <!-- <origin xyz="${base_origin}"/> -->
      <geometry>
         <box size="${length} ${width} ${height}"/>
      </geometry>
    </visual>
    <collision>
      <!-- <origin xyz="${base_origin}"/> -->
      <geometry>
         <box size="${length} ${width} ${height}"/>
      </geometry>
    </collision>
    <xacro:base_inertial mass="10"/>
</link>




  <!-- create a xacro macro for the wheels links -->
  <xacro:macro name="wheel" params="prefix suffix reflect_x reflect_y reflect_z">
      <link name="${prefix}_${suffix}_wheel">
          <visual>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
              <cylinder radius="${wheel_radius}" length="${wheel_len}"/>
            </geometry>
            <material name="black"/>
          </visual>
          <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <geometry>
              <cylinder radius="${wheel_radius}" length="${wheel_len}"/>
            </geometry>
          </collision>
          <xacro:wheel_inertia mass="1"/>
      </link>
      <!-- create xacro macro fo wheel joint -->
      <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
          <axis xyz="${wheel_axis}" rpy="0 0 0" />
          <parent link="base_link"/>
          <child link="${prefix}_${suffix}_wheel"/>
          <origin xyz="${reflect_x * 0.4} ${reflect_y * 0.5} ${reflect_z * 0.05}" rpy="0 0 0"/>
      </joint>

      <!-- This block provides the simulator (Gazebo) with information on a few additional
      physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
      <gazebo reference="${prefix}_${suffix}_wheel">
        <mu1 value="200.0"/>
        <mu2 value="100.0"/>
        <kp value="10000000.0" />
        <kd value="1.0" />
        <material>Gazebo/Grey</material>
      </gazebo>

      <!-- This block connects the wheel joint to an actuator (motor), which informs both
          simulation and visualization of the robot -->
      <transmission name="${prefix}_${suffix}_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="${prefix}_${suffix}_wheel_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="${prefix}_${suffix}_wheel_joint">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
      </transmission>
      
  </xacro:macro>
  
<!--wheel/joint_0 code inspired from -->
<!-- https://github.com/ZBO-R8io/Roberto/blob/main/backups/lunarbot/urdf/lunarbot.xacro -->
<!-- change these values -->
  <xacro:wheel prefix="right" suffix="0" reflect_x="1" reflect_y="1" reflect_z="1" />
  <!--wheel/joint_1-->
  <xacro:wheel prefix="left" suffix="1" reflect_x="1" reflect_y="-1" reflect_z="1" />
  <!--wheel/joint_2-->
  <xacro:wheel prefix="right" suffix="2" reflect_x="-1" reflect_y="1" reflect_z="1" />
  <!--wheel/joint_3-->
  <xacro:wheel prefix="left" suffix="3" reflect_x="-1" reflect_y="-1" reflect_z="1" />

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

</robot>
